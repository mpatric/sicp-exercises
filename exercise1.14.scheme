(define (count-change amount)
  (cc amount 5)
)

(define (cc amount kinds-of-coins)
  (display-all amount kinds-of-coins)(newline)
  (cond
    ((= amount 0) 1)
    ((or (< amount 0) (= kinds-of-coins 0)) 0)
    (else
      (+
        (cc amount (- kinds-of-coins 1))
        (cc (- amount (first-denomination kinds-of-coins)) kinds-of-coins)
      )
    )
  )
)

(define (first-denomination kinds-of-coins)
  (cond
    ((= kinds-of-coins 1) 1)
    ((= kinds-of-coins 2) 5)
    ((= kinds-of-coins 3) 10)
    ((= kinds-of-coins 4) 25)
    ((= kinds-of-coins 5) 50)
  )
)

(define (display-all . args)
  (display args)
)

; (count-change 100)
; -> 292

; (count-change 1)
; -> 1

; (count-change 5)
; -> 2

; (count-change 10)
; -> 4

; (count-change 11)
; -> 4

; Tree for 11 cents:

(cc 11 5)
  (cc -39 5)
    0
  (cc 11 4)
    (cc -14 4)
      0
    (cc 11 3)
      (cc 1 3)
        (cc -9 3)
          0
        (cc 1 2)
          (cc -4 2)
            0
          (cc 1 1)
            (cc 0 1)
              1
            (cc 1 0)
              0
      (cc 11 2)
        (cc 6 2)
          (cc 1 2)
            (cc -4 2)
              0
            (cc 1 1)
              (cc 0 1)
                1
              (cc 1 0)
                0
          (cc 6 1)
            (cc 5 1)
              (cc 4 1)
                (cc 3 1)
                  (cc 2 1)
                    (cc 1 1)
                      (cc 0 1)
                        1
                      (cc 1 0)
                        0
                    (cc 2 0)
                      0
                  (cc 3 0)
                    0
                (cc 4 0)
                  0
              (cc 5 0)
                0
            (cc 6 0)
              0
        (cc 11 1)
          (cc 10 1)
            (cc 9 1)
              (cc 8 1)
                (cc 7 1)
                  (cc 6 1)
                    (cc 5 1)
                      (cc 4 1)
                        (cc 3 1)
                          (cc 2 1)
                            (cc 1 1)
                              (cc 0 1)
                                1
                              (cc 1 0)
                                0
                            (cc 2 0)
                              0
                          (cc 3 0)
                            0
                        (cc 4 0)
                          0
                      (cc 5 0)
                        0
                    (cc 6 0)
                      0
                  (cc 7 0)
                    0
                (cc 8 0)
                  0
              (cc 9 0)
                0
            (cc 10 0)
              0
          (cc 11 0)
            0

; order of growth where n is the amount:
;   space: O(n) (space relates to the maximum depth of the tree, which is relative to n I think, so linear growth)
;   number of steps: O(n ^ k) where k is the number of coin types
