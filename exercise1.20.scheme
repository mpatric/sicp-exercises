(define (display-all . args)
  (display args)
)

(define (gcd a b)
  ; (display-all a b)(newline)
  (if (= b 0)
    a
    (gcd b (remainder a b))
  )
)

; normal order
; reminder is called 18 times (only the lines marked with a * below are evaluated)
(gcd 206 40)
  (gcd 40 (remainder 206 40))
* (if (= (remainder 206 40) 0))..
  (if (= 6 0))..
  (gcd (remainder 206 40) (remainder 40 (remainder 206 40)))
*   (if (= (remainder 40 (remainder 206 40)) 0))..
    (if (= 4 0))..
    (gcd (remainder 40 (remainder 206 40)) (remainder (remainder 206 40) (remainder 40 (remainder 206 40))))
*     (if (= (remainder (remainder 206 40) (remainder 40 (remainder 206 40))) 0))..
      (if (= 2 0))
      (gcd (remainder (remainder 206 40) (remainder 40 (remainder 206 40))) (remainder (remainder 40 (remainder 206 40)) (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))))
*       (if (= (remainder (remainder 40 (remainder 206 40)) (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))) 0))
        (if (= 0 0))
*         (remainder (remainder 206 40) (remainder 40 (remainder 206 40)))

; applicative order (i.e. what scheme does)
; remainder is called 4 times
(gcd 206 40)
  (gcd 40 (remainder 206 40))
  (gcd 40 6)
    (gcd 6 (remainder 40 6))
    (gcd 6 4)
      (gcd 4 (remainder 6 4))
      (gcd 4 2)
        (gcd 2 (remainder 4 2))
        (gcd 2 0)
          2
