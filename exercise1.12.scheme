;           1
;          1 1
;         1 2 1
;        1 3 3 1
;       1 4 6 4 1
;     1 5 10 10 5 1

; let's call the top row 1, column 1

(define (pascal row col)
  (cond
    ((or (< row 2) (< col 2) (>= col row)) 1)
    (else
      (+
        (pascal (- row 1) (- col 1))
        (pascal (- row 1) col)
      )
    )
  )
)


; (pascal 1 1)
; -> 1

; (pascal 2 1)
; -> 1

; (pascal 2 2)
; -> 1

; (pascal 3 1)
; -> 1

; (pascal 3 2)
; -> 2

; (pascal 3 3)
; -> 1

; (pascal 4 1)
; -> 1

; (pascal 4 2)
; -> 3

; (pascal 4 3)
; -> 3

; (pascal 4 4)
; -> 1

; (pascal 5 2)
; -> 4

; (pascal 5 3)
; -> 6

; (pascal 5 4)
; -> 4

; (pascal 6 3)
; -> 10

; (pascal 6 2)
; -> 5